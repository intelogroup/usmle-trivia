[build]
  command = "npm run build"
  publish = "dist"

[build.environment]
  NODE_VERSION = "20"
  NPM_FLAGS = "--force"
  # Production build optimizations
  VITE_BUILD_SOURCEMAP = "false"
  NODE_OPTIONS = "--max-old-space-size=1024"
  # Enable build caching
  NPM_CONFIG_CACHE = "/opt/buildhome/.npm"

# Environment variables for production
[context.production.environment]
  VITE_CONVEX_URL = "https://formal-sardine-916.convex.cloud"
  NODE_ENV = "production"
  VITE_NODE_ENV = "production"

# Preview deployments (for testing)
[context.deploy-preview.environment]
  VITE_CONVEX_URL = "https://formal-sardine-916.convex.cloud"
  NODE_ENV = "staging"
  VITE_NODE_ENV = "staging"

# Branch deployments
[context.branch-deploy.environment]
  VITE_CONVEX_URL = "https://formal-sardine-916.convex.cloud"
  NODE_ENV = "development"
  VITE_NODE_ENV = "development"

# Single Page Application routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Security headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    # Updated CSP for Convex Production with WebSocket support
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://formal-sardine-916.convex.cloud https://formal-sardine-916.convex.site wss://formal-sardine-916.convex.cloud"
    # Performance headers
    X-DNS-Prefetch-Control = "on"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains"

# Cache static assets aggressively
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Cache HTML with shorter duration
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

# Functions configuration (for potential serverless functions)
[functions]
  directory = "netlify/functions"
  node_bundler = "esbuild"

# Build plugins for optimization
[[plugins]]
  package = "netlify-plugin-checklinks"

# Note: Netlify handles compression automatically, no manual Content-Encoding needed